{"version":3,"sources":["scripts/main.js"],"names":["convertToNumber","letters","correctSalary","letter","convertToString","symbols","dataSalary","length","list","document","querySelectorAll","sortList","argument","newList","sort","person1","person2","dataset","salary","correctList","querySelector","innerHTML","map","text","textContent","join","getEmployees","personList","correctArr","reduce","prev","user","userObject","name","trim","position","age","push"],"mappings":"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","file":"main.b27848db.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst convertToNumber = function(letters) {\n  let correctSalary = '';\n\n  for (const letter of letters) {\n    if (letter !== '$' && letter !== ',') {\n      correctSalary += letter;\n    }\n  }\n\n  return +correctSalary;\n};\n\nconst convertToString = function(symbols) {\n  let dataSalary = '$';\n\n  for (const symbol of symbols) {\n    dataSalary += symbol;\n\n    if (dataSalary.length === 4) {\n      dataSalary += ',';\n    }\n  }\n\n  return dataSalary;\n};\n\nconst list = document.querySelectorAll('li');\n\nconst sortList = function(argument) {\n  const newList = [...argument].sort((person1, person2) => {\n    person1.dataset.salary = convertToNumber(person1.dataset.salary);\n    person2.dataset.salary = convertToNumber(person2.dataset.salary);\n\n    return person2.dataset.salary - person1.dataset.salary;\n  });\n\n  return newList;\n};\n\nconst correctList = document.querySelector('ul');\n\ncorrectList.innerHTML = `\n  ${sortList(list).map(text => `\n     <li>${text.textContent}</li>\n  `).join('')}\n`;\n\nconst getEmployees = function(personList) {\n  const correctArr = sortList(personList).reduce((prev, user) => {\n    const userObject = {\n      name: user.textContent.trim(),\n      position: user.dataset.position,\n      salary: convertToString(user.dataset.salary),\n      age: user.dataset.age,\n    };\n\n    prev.push(userObject);\n\n    return prev;\n  },\n  []);\n\n  return correctArr;\n};\n\nsortList(list);\ngetEmployees(list);\n"]}